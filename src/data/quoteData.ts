// Autogenerated quoteData.ts
export const materialData: Record<string, {
  precioKilo: number;
  densidad: number;
  compatibles: string[];
}> = {
  "Acero Comercial": {
    precioKilo: 2.75,
    densidad: 0.13,
    compatibles: ["Angulo Regular", "PTR Cuadrado", "Redondo", "Placa o Lámina", "Solera", "Tubo", "Hexagonal"]
  },
  "Acero Inoxidable": {
    precioKilo: 5.99,
    densidad: 0.14,
    compatibles: ["Angulo Regular", "PTR Cuadrado", "Redondo", "Placa o Lámina", "Solera", "Tubo", "Hexagonal"]
  },
  "Aluminio": {
    precioKilo: 12.73,
    densidad: 0.045,
    compatibles: ["Angulo Regular", "PTR Cuadrado", "Redondo", "Placa o Lámina", "Solera", "Tubo", "Hexagonal"]
  },
  "Bronce": {
    precioKilo: 12.93,
    densidad: 0.084,
    compatibles: ["Angulo Regular", "PTR Cuadrado", "Redondo", "Placa o Lámina", "Solera", "Tubo", "Hexagonal"]
  },
  "Cobre": {
    precioKilo: 15.24,
    densidad: 0.08,
    compatibles: ["Angulo Regular", "PTR Cuadrado", "Redondo", "Placa o Lámina", "Solera", "Tubo", "Hexagonal"]
  },
  "Delrin/Teflon/G10": {
    precioKilo: 32.35,
    densidad: 0.04,
    compatibles: ["Angulo Regular", "PTR Cuadrado", "Redondo", "Placa o Lámina", "Solera", "Tubo", "Hexagonal"]
  },
  "Nylamid": {
    precioKilo: 17.63,
    densidad: 0.04,
    compatibles: ["Angulo Regular", "PTR Cuadrado", "Redondo", "Placa o Lámina", "Solera", "Tubo", "Hexagonal"]
  },
  "Solid Pro": {
    precioKilo: 45.88,
    densidad: 0.05,
    compatibles: ["Angulo Regular", "PTR Cuadrado", "Redondo", "Placa o Lámina", "Solera", "Tubo", "Hexagonal"]
  },
  "Titanio": {
    precioKilo: 67.78,
    densidad: 0.065,
    compatibles: ["Angulo Regular", "PTR Cuadrado", "Redondo", "Placa o Lámina", "Solera", "Tubo", "Hexagonal"]
  },
  "UHMW/PVC": {
    precioKilo: 23.84,
    densidad: 0.03,
    compatibles: ["Angulo Regular", "PTR Cuadrado", "Redondo", "Placa o Lámina", "Solera", "Tubo", "Hexagonal"]
  }
};

export const tipos = [
  "Angulo Regular",
  "PTR Cuadrado",
  "Redondo",
  "Placa o Lámina",
  "Solera",
  "Tubo",
  "Hexagonal"
];

export function getCompatibleMaterials(tipo: string) {
  return Object.keys(materialData).filter(
    (mat) => materialData[mat].compatibles.includes(tipo)
  );
}

// ✅ New: Define which inputs are required for each tipo
export const tipoInputRules: Record<string, {
  espesor: boolean;
  ancho: boolean;
  largo: boolean;
}> = {
  "Angulo Regular":    { espesor: true,  ancho: false, largo: true },
  "PTR Cuadrado":      { espesor: true,  ancho: true,  largo: true },
  "Redondo":           { espesor: false, ancho: true,  largo: true },
  "Placa o Lámina":    { espesor: true,  ancho: true,  largo: true },
  "Solera":            { espesor: true,  ancho: true,  largo: true },
  "Tubo":              { espesor: false, ancho: true,  largo: true },
  "Hexagonal":         { espesor: false, ancho: true,  largo: true },
};


export function getVolumen(tipo: string, espesor: number, ancho: number, largo: number): number | null {
  switch (tipo) {
    case "Solera":
    case "Placa o Lámina":
      return espesor * ancho * largo;
    case "Redondo":
      return Math.PI * Math.pow(ancho / 2, 2) * largo;
    case "PTR Cuadrado":
      return espesor * (4 * ancho) * largo;
    case "Angulo Regular":
      return 2 * ancho * largo * espesor;
    case "Tubo":
      return ancho * Math.PI * espesor * largo;
    default:
      return null;
  }
}